// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String? @unique
  username        String? @unique  
  bio             String?
  location        String?
  site            String?
  emailVerified   DateTime?
  image           String?
  profileImage    String?
  coverImage      String?
  hashedPassword  String?
  birthDate       DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  followingIds    String[] @db.ObjectId
  hasNotification Boolean?

  posts         Post[]
  comments      Comment[]
  notifications Notification[]
}

model Post{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  image String
  username String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  likedIds String[] @db.ObjectId

  user User @relation(fields: [username], references: [username], onDelete:Cascade)
  comments Comment[]
}

model Comment{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  postId String @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete:Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete:Cascade)
}

model Notification{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  createdAt DateTime @default(now())
  userId String @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete:Cascade)
} 